class Persona:
    def __init__(self, nombre, apellido, direccion, telefono, edad, email):
        self.nombre = nombre
        self.apellido = apellido
        self.direccion = direccion
        self.telefono = telefono
        self.edad = edad
        self.email = email

    # Métodos GET
    def get_nombre(self):
        return self.nombre

    def get_apellido(self):
        return self.apellido

    def get_direccion(self):
        return self.direccion

    def get_telefono(self):
        return self.telefono

    def get_edad(self):
        return self.edad

    def get_email(self):
        return self.email

    # Métodos SET
    def set_nombre(self, nombre):
        self.nombre = nombre

    def set_apellido(self, apellido):
        self.apellido = apellido

    def set_direccion(self, direccion):
        self.direccion = direccion

    def set_telefono(self, telefono):
        self.telefono = telefono

    def set_edad(self, edad):
        self.edad = edad

    def set_email(self, email):
        self.email = email


class Empleado(Persona):
    def __init__(self, nombre, apellido, direccion, telefono, edad, email, salario, jefe_inmediato, años_experiencia):
        super().__init__(nombre, apellido, direccion, telefono, edad, email)
        self.salario = salario
        self.jefe_inmediato = jefe_inmediato
        self.años_experiencia = años_experiencia
        self.nombre_cargo = self.calcular_cargo()

    # Métodos GET
    def get_salario(self):
        return self.salario

    def get_jefe_inmediato(self):
        return self.jefe_inmediato

    def get_años_experiencia(self):
        return self.años_experiencia

    def get_nombre_cargo(self):
        return self.nombre_cargo

    # Métodos SET
    def set_salario(self, salario):
        self.salario = salario
        self.nombre_cargo = self.calcular_cargo()

    def set_jefe_inmediato(self, jefe_inmediato):
        self.jefe_inmediato = jefe_inmediato

    def set_años_experiencia(self, años_experiencia):
        self.años_experiencia = años_experiencia
        self.nombre_cargo = self.calcular_cargo()

    def calcular_cargo(self):
        if self.salario >= 5000000 and self.años_experiencia >= 5 and 25 <= self.edad <= 45:
            return "Senior"
        elif 900000 <= self.salario <= 1200000 and 1 <= self.años_experiencia <= 2 and 18 <= self.edad <= 22:
            return "Junior"
        else:
            return "No definido"


def main():
    print("Ingrese los datos del empleado:")
    nombre = input("Nombre: ")
    apellido = input("Apellido: ")
    direccion = input("Dirección: ")
    telefono = input("Teléfono: ")
    edad = int(input("Edad: "))
    email = input("Email: ")
    salario = float(input("Salario: "))
    jefe_inmediato = input("Jefe inmediato: ")
    años_experiencia = int(input("Años de experiencia: "))

    empleado = Empleado(nombre, apellido, direccion, telefono, edad, email, salario, jefe_inmediato, años_experiencia)

    # Imprimir detalles del empleado
    print("\nDetalles del Empleado:")
    print(f"Nombre: {empleado.get_nombre()} {empleado.get_apellido()}")
    print(f"Dirección: {empleado.get_direccion()}")
    print(f"Teléfono: {empleado.get_telefono()}")
    print(f"Edad: {empleado.get_edad()}")
    print(f"Email: {empleado.get_email()}")
    print(f"Salario: {empleado.get_salario()}")
    print(f"Jefe Inmediato: {empleado.get_jefe_inmediato()}")
    print(f"Años de Experiencia: {empleado.get_años_experiencia()}")
    print(f"Cargo: {empleado.get_nombre_cargo()}")


if __name__ == "__main__":
    main()
